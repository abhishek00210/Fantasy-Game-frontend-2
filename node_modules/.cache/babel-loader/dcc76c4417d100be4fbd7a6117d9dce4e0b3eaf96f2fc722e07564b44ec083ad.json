{"ast":null,"code":"var _jsxFileName = \"/Users/saintlucifer/Desktop/Company assisment/fantasy game/frontend/team-builder/src/components/TeamForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PlayerList from './PlayerList';\nimport { fetchPlayers, createTeam } from '../services/api';\nimport '../styles/TeamForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamForm = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [teamName, setTeamName] = useState('');\n  const [error, setError] = useState('');\n\n  // Fetch players when the component mounts\n  useEffect(() => {\n    const getPlayers = async () => {\n      const fetchedPlayers = await fetchPlayers();\n      setPlayers(fetchedPlayers);\n    };\n    getPlayers();\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (selectedPlayers.length > 11) {\n      setError('You can only select up to 11 players.');\n      return;\n    }\n    if (!teamName || selectedPlayers.length === 0) {\n      setError('Please select players and provide a team name.');\n      return;\n    }\n    const teamData = {\n      name: teamName,\n      players: selectedPlayers\n    };\n    const response = await createTeam(teamData);\n    if (response.success) {\n      alert('Team created successfully!');\n      setTeamName('');\n      setSelectedPlayers([]);\n      setError('');\n    } else {\n      setError('Failed to create team.');\n    }\n  };\n  const togglePlayerSelection = playerId => {\n    if (selectedPlayers.includes(playerId)) {\n      setSelectedPlayers(selectedPlayers.filter(id => id !== playerId));\n    } else if (selectedPlayers.length < 11) {\n      setSelectedPlayers([...selectedPlayers, playerId]);\n    } else {\n      setError('Maximum of 11 players allowed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Team Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: teamName,\n          onChange: e => setTeamName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerList, {\n        players: players,\n        selectedPlayers: selectedPlayers,\n        togglePlayerSelection: togglePlayerSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamForm, \"a6+knQ1gVcWS9gsgnA7UT0SqFsU=\");\n_c = TeamForm;\nexport default TeamForm;\nvar _c;\n$RefreshReg$(_c, \"TeamForm\");","map":{"version":3,"names":["React","useState","useEffect","PlayerList","fetchPlayers","createTeam","jsxDEV","_jsxDEV","TeamForm","_s","players","setPlayers","selectedPlayers","setSelectedPlayers","teamName","setTeamName","error","setError","getPlayers","fetchedPlayers","handleSubmit","e","preventDefault","length","teamData","name","response","success","alert","togglePlayerSelection","playerId","includes","filter","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/saintlucifer/Desktop/Company assisment/fantasy game/frontend/team-builder/src/components/TeamForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PlayerList from './PlayerList';\nimport { fetchPlayers, createTeam } from '../services/api';\nimport '../styles/TeamForm.css';\n\nconst TeamForm = () => {\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [teamName, setTeamName] = useState('');\n  const [error, setError] = useState('');\n\n  // Fetch players when the component mounts\n  useEffect(() => {\n    const getPlayers = async () => {\n      const fetchedPlayers = await fetchPlayers();\n      setPlayers(fetchedPlayers);\n    };\n\n    getPlayers();\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (selectedPlayers.length > 11) {\n      setError('You can only select up to 11 players.');\n      return;\n    }\n\n    if (!teamName || selectedPlayers.length === 0) {\n      setError('Please select players and provide a team name.');\n      return;\n    }\n\n    const teamData = { name: teamName, players: selectedPlayers };\n    const response = await createTeam(teamData);\n\n    if (response.success) {\n      alert('Team created successfully!');\n      setTeamName('');\n      setSelectedPlayers([]);\n      setError('');\n    } else {\n      setError('Failed to create team.');\n    }\n  };\n\n  const togglePlayerSelection = (playerId) => {\n    if (selectedPlayers.includes(playerId)) {\n      setSelectedPlayers(selectedPlayers.filter(id => id !== playerId));\n    } else if (selectedPlayers.length < 11) {\n      setSelectedPlayers([...selectedPlayers, playerId]);\n    } else {\n      setError('Maximum of 11 players allowed.');\n    }\n  };\n\n  return (\n    <div className=\"team-form\">\n      <h2>Create a New Team</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Team Name:</label>\n          <input\n            type=\"text\"\n            value={teamName}\n            onChange={(e) => setTeamName(e.target.value)}\n            required\n          />\n        </div>\n\n        <PlayerList \n          players={players} \n          selectedPlayers={selectedPlayers} \n          togglePlayerSelection={togglePlayerSelection} \n        />\n\n        {error && <p className=\"error\">{error}</p>}\n\n        <button type=\"submit\">Create Team</button>\n      </form>\n    </div>\n  );\n};\n\nexport default TeamForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}